[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100
src_paths = [
  "apps",
  "common",
  "core",
  "strategies",
  "config",
  "scripts",
  "tools",
  "tests",
  "utils",
  "schedulers",
]
force_sort_within_sections = true
extend_skip_glob = ["**/.wslvenv/**", "**/.venv/**", "**/site-packages/**"]

[tool.ruff]
target-version = "py310"
line-length = 100
extend-exclude = [
  ".wslvenv",
  ".venv",
  "data_cache",
  "data_cache_recent",
  "results_csv",
  "results_csv_test",
  "logs",
  "htmlcov",
  "tools/archive",
  "codacy_report",
]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "UP", # pyupgrade
  "N",  # pep8-naming
  "S",  # flake8-bandit (security)
]
ignore = [
  # pytestの未使用引数や命名など、既存テスト互換のために一部緩める
  "N802",
  "N803",
  "N806",
  # 一時的に既存コードとの互換性のため無効にする問題
  "E501", # Line too long - gradual fix
  "F821", # Undefined name - 複雑なスコープの問題
  "E402", # Module level import not at top - 既存のパターン
  "F841", # Unused variable - テスト用変数
  "E731", # Lambda assignment - テストコード内
  # Security checks - 既存コードとの互換性
  "S101", # Use of assert (pytest uses it)
]

[tool.pytest.ini_options]
testpaths = ["tests", "tests/experimental", "."]
addopts = "--cov=./ --cov-report=term-missing"

[tool.coverage.run]
source = ["core", "common", "strategies", "config", "schedulers"]
omit = [
  "*/tests/*",
  "*/test_*.py",
  "*/__pycache__/*",
  "*/site-packages/*",
  "*/.venv/*",
  "*/.wslvenv/*",
  "*/data_cache/*",
  "*/data_cache_recent/*",
  "*/results_csv/*",
  "*/results_csv_test/*",
  "*/logs/*",
  "*/htmlcov/*",
  "*/tools/archive/*",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
skip_empty = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if __name__ == .__main__.:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
  "@abstractmethod",
  "@abc.abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.json]
output = "coverage.json"

# カバレッジ目標値（参考）
# core/system7.py: 66% (達成済み)
# core/system1-6.py: 60-65% (目標)
# common/*.py: 70% (目標)
# strategies/*.py: 65% (目標)
