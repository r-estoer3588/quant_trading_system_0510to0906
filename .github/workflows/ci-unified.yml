name: CI Unified

on:
  push:
    branches: ["main", "branch0906"]
  pull_request:
    branches: ["main", "branch0906"]

concurrency:
  group: ci-unified-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install ruff black
      - name: Ruff (lint)
        run: ruff check . --output-format=github
      - name: Black (format check)
        run: black --check .

  test-and-coverage:
    name: Test & Coverage
    runs-on: ubuntu-latest
    needs: [lint-and-format]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      PYTHONUNBUFFERED: 1
      COMPACT_TODAY_LOGS: "1"
      ENABLE_PROGRESS_EVENTS: "0"
      PYTEST_USE_FAKE_SYMBOLS: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libatlas-base-dev libopenblas-dev
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest-cov coverage[toml]
      - name: Run tests with coverage
        run: |
          pytest -q \
            --cov=core \
            --cov=common \
            --cov=strategies \
            --cov-report=term-missing \
            --cov-report=html:htmlcov \
            --cov-report=xml:coverage.xml \
            --cov-report=json:coverage.json
      - name: Coverage summary (markdown)
        run: |
          echo "## ðŸ“Š Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          coverage report --skip-empty >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Check System7 threshold (warn-only)
        run: |
          SYSTEM7=$(coverage report | grep "core/system7.py" | awk '{print $4}' | sed 's/%//') || true
          echo "System7 coverage: ${SYSTEM7}%"
          if [ -n "$SYSTEM7" ]; then
            if (( $(echo "$SYSTEM7 < 66" | bc -l) )); then
              echo "::warning::System7 coverage ($SYSTEM7%) is below 66%"
            else
              echo "System7 coverage OK ($SYSTEM7%)"
            fi
          else
            echo "::notice::core/system7.py not found in coverage report"
          fi
      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: htmlcov/
          if-no-files-found: warn
          retention-days: 30
      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-xml
          path: coverage.xml
          if-no-files-found: warn
          retention-days: 30
      - name: Upload coverage JSON
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-json
          path: coverage.json
          if-no-files-found: warn
          retention-days: 30
